#
# Set up environment variables for general build tool to operate
#
export ZOPEN_TYPE="TARBALL"

if [ ! -z "$OPENSSL_HW_BUILD" ]; then
  printHeader "Building HW accelerated openssl"
  export ZOPEN_TARBALL_URL="https://www.openssl.org/source/openssl-1.1.1o.tar.gz"
  export ZOPEN_TARBALL_DEPS="curl git gzip make m4 perl tar"
  ln -s hardware_patches patches
else
  printHeader "Building SW openssl"
  export ZOPEN_TARBALL_URL="https://www.openssl.org/source/openssl-1.1.1s.tar.gz"
  export ZOPEN_TARBALL_DEPS="curl git gzip make m4 perl tar zoslib"
  rm -f patches
  ln -s software_patches patches
fi

export ZOPEN_GIT_URL="https://github.com/openssl/openssl"
export ZOPEN_GIT_DEPS="git make m4 perl autoconf automake help2man makeinfo xz"

if [ "${ZOPEN_TYPE}x" = "TARBALLx" ]; then
	export ZOPEN_BOOTSTRAP=skip
fi
export ZOPEN_CONFIGURE="./Configure"
export ZOPEN_EXTRA_CONFIGURE_OPTS="OS390-ASCII"
export ZOPEN_CHECK_OPTS="test"
export ZOPEN_EXTRA_CFLAGS="${ZOPEN_EXTRA_CFLAGS} -std=gnu99"
export ZOPEN_EXTRA_CPPFLAGS="${ZOPEN_EXTRA_CPPFLAGS} -DNI_MAXSERV=32 -DNI_MAXHOST=1025"
export LDLIBS="${ZOPEN_EXTRA_LIBS}"

zopen_append_to_env()
{
cat <<ZZ
if [ ! -z "\$ZOPEN_IN_ZOPEN_BUILD" ]; then
  export ZOPEN_EXTRA_CFLAGS="\${ZOPEN_EXTRA_CFLAGS} -I\$PWD/include"
  export ZOPEN_EXTRA_CXXFLAGS="\${ZOPEN_EXTRA_CXXFLAGS} -I\$PWD/include"
  export ZOPEN_EXTRA_LDFLAGS="\${ZOPEN_EXTRA_LDFLAGS} -L\$PWD/lib"
  export ZOPEN_EXTRA_LIBS="\${ZOPEN_EXTRA_LIBS} -lssl -lcrypto"

  #
  # These are required for wget
  #
  export OPENSSL_CFLAGS="-I\$PWD/include"
  export OPENSSL_LDFLAGS="-L\$PWD/lib"
  export OPENSSL_LIBS="-lssl -lcrypto"
fi
ZZ
}

zopen_check_results()
{
chk="$1/$2_check.log"

successes=$(grep -E " ok$" ${chk} | wc -l)
totalTests=$(grep -E "^Failed | ok$" ${chk} | wc -l)
failures="$((totalTests-successes))"

if [ ! -z "$OPENSSL_HW_BUILD" ]; then
  cat <<ZZ
  actualFailures:$failures
  totalTests:$totalTests
  expectedFailures:17
ZZ
else
  cat <<ZZ
  actualFailures:$failures
  totalTests:$totalTests
  expectedFailures:12
ZZ
fi

}
