From 99893098032ad5946933294f9fcfbd7050b327ba Mon Sep 17 00:00:00 2001
From: Mike Fulton <mikefultonpersonal@gmail.com>
Date: Fri, 17 Jun 2022 11:09:28 -0700
Subject: [PATCH 04/40] 003_AIX

---
 crypto/err/err.c          | 9 +++++++++
 crypto/init.c             | 8 ++++----
 include/openssl/objects.h | 2 +-
 3 files changed, 14 insertions(+), 5 deletions(-)

diff --git a/crypto/err/err.c b/crypto/err/err.c
index 239a3ce..4b620f3 100644
--- a/crypto/err/err.c
+++ b/crypto/err/err.c
@@ -231,6 +231,14 @@ static void build_SYS_str_reasons(void)
          * there's no point in calling openssl_strerror_r()
          */
         if (str->string == NULL && cnt < sizeof(strerror_pool)) {
+
+	  /* ICC Can't do this on AIX as the locale code 
+	     deadlocks if run during library loads */
+#if defined(_AIX) 
+	  snprintf(&strerror_tab[i][0],LEN_SYS_STR_REASON,"OS error %-3d",i);
+	  str->string = &strerror_tab[i][0];
+#else   
+
             if (openssl_strerror_r(i, cur, sizeof(strerror_pool) - cnt)) {
                 size_t l = strlen(cur);
 
@@ -249,6 +257,7 @@ static void build_SYS_str_reasons(void)
                 *cur++ = '\0';
                 cnt++;
             }
+ #endif
         }
         if (str->string == NULL)
             str->string = "unknown";
diff --git a/crypto/init.c b/crypto/init.c
index b23af79..7b95270 100644
--- a/crypto/init.c
+++ b/crypto/init.c
@@ -116,7 +116,7 @@ err:
     CRYPTO_THREAD_cleanup_local(&key);
     return 0;
 }
-
+#if 0 /* IBM handles this itself */
 static CRYPTO_ONCE register_atexit = CRYPTO_ONCE_STATIC_INIT;
 #if !defined(OPENSSL_SYS_UEFI) && defined(_WIN32)
 static int win32atexit(void)
@@ -154,7 +154,7 @@ DEFINE_RUN_ONCE_STATIC_ALT(ossl_init_no_register_atexit,
     /* Do nothing in this case */
     return 1;
 }
-
+#endif
 static CRYPTO_ONCE load_crypto_nodelete = CRYPTO_ONCE_STATIC_INIT;
 DEFINE_RUN_ONCE_STATIC(ossl_init_load_crypto_nodelete)
 {
@@ -749,7 +749,7 @@ int OPENSSL_init_crypto(uint64_t opts, const OPENSSL_INIT_SETTINGS *settings)
 
     return 1;
 }
-
+#if 0 /* IBM handles this itself */
 int OPENSSL_atexit(void (*handler)(void))
 {
     OPENSSL_INIT_STOP *newhand;
@@ -815,7 +815,7 @@ int OPENSSL_atexit(void (*handler)(void))
 
     return 1;
 }
-
+#endif
 #ifdef OPENSSL_SYS_UNIX
 /*
  * The following three functions are for OpenSSL developers.  This is
diff --git a/include/openssl/objects.h b/include/openssl/objects.h
index 5e8b576..588337e 100644
--- a/include/openssl/objects.h
+++ b/include/openssl/objects.h
@@ -44,7 +44,7 @@ typedef struct obj_name_st {
 int OBJ_NAME_init(void);
 int OBJ_NAME_new_index(unsigned long (*hash_func) (const char *),
                        int (*cmp_func) (const char *, const char *),
-                       void (*free_func) (const char *, int, const char *));
+                       void (*xfree_func) (const char *, int, const char *));
 const char *OBJ_NAME_get(const char *name, int type);
 int OBJ_NAME_add(const char *name, int type, const char *data);
 int OBJ_NAME_remove(const char *name, int type);
-- 
2.36.1

